#include <iostream> // Підключення бібліотеки для введення/виведення (наприклад, cout)
// #include <string> // Бібліотека string тут не потрібна для класу Square

// Використання стандартного простору імен, щоб не писати std:: перед cout
using namespace std;

// Оголошення класу Square (Квадрат)
class Square
{
// Приватні члени класу недоступні ззовні класу напряму.
// Доступ до них можливий лише через публічні методи класу (геттери, сеттери).
// **Завдання з PDF: Hide the area and side members using the keyword private**
private:
    double side; // Довжина сторони квадрата
    double area; // Площа квадрата
    bool side_changed; // Прапорець для відстеження змін сторони через сеттер

    // Приватний метод для оновлення площі (використовується всередині класу)
    void update_area() {
        area = side * side;
    }

// Публічні члени класу доступні ззовні.
public:
    // Конструктор класу - викликається при створенні нового об'єкта Square
    // Ініціалізує сторону, розраховує площу та встановлює прапорець змін.
    // **Виправлення помилки:** Конструктор приймає початкову сторону.
    Square(double initial_side) {
        // Перевіряємо початкове значення сторони
        if (initial_side >= 0) {
            side = initial_side;
        } else {
            cout << "Помилка: сторона квадрата не може бути від'ємною. Встановлено сторону 0." << endl;
            side = 0; // Встановлюємо безпечне значення за замовчуванням
        }
        update_area(); // Розраховуємо площу на основі встановленої сторони
        side_changed = false; // Початково сторона ще не змінювалася через сеттер
        cout << "Створено об'єкт Square зі стороною " << side << " та площею " << area << endl;
    }

    // Метод для встановлення нового значення сторони (сеттер)
    // **Завдання 2: Додайте метод set**
    // **Завдання з PDF: add a public method set_side ... update both fields**
    // **Завдання з PDF: set_side should also ignore the change if the argument is less than 0**
    void set_side(double new_side) {
        cout << "Спроба встановити сторону: " << new_side << endl;
        // Перевірка, чи нове значення сторони є допустимим (невід'ємним)
        if (new_side >= 0) {
            // Перевірка, чи нове значення відрізняється від поточного
            if (side != new_side) {
                side = new_side; // Встановлюємо нове значення сторони
                update_area();   // Оновлюємо площу відповідно до нової сторони
                side_changed = true; // Встановлюємо прапорець, що сторона змінилася
                cout << "Сторону успішно змінено. Нова сторона: " << side << ", Нова площа: " << area << endl;
            } else {
                 cout << "Нове значення сторони таке ж, як поточне. Змін не відбулося." << endl;
                 // Не змінюємо side_changed, якщо значення те саме
            }
        } else {
            // Ігноруємо зміну, якщо значення недопустиме
            cout << "Помилка: сторона квадрата не може бути від'ємною. Значення " << new_side << " проігноровано." << endl;
        }
    }

    // Метод для отримання площі квадрата (геттер)
    // **Завдання 3: Доробіть метод get_aria**
    double get_area() {
        // Повертає поточне значення площі (яке завжди актуальне завдяки update_area)
        return area;
    }

    // Метод для отримання сторони квадрата (геттер) - опціонально, але корисно
    double get_side() {
        return side;
    }

    // Метод для перевірки, чи змінювалася сторона квадрата через метод set_side
    // **Завдання 3: Доробіть метод changet (перевіряє чи змінювалась сторона)**
    bool was_side_changed() {
        // Повертає true, якщо set_side успішно змінив сторону, інакше false
        return side_changed;
    }

    // Метод для виведення інформації про квадрат
    // **Виправлення помилки:** Глобальна функція print перетворена на метод класу
    // **Завдання з PDF: change the print function implementation into a public method of Square**
    void print() {
        // Використовуємо члени класу безпосередньо (side та area)
        cout << "Квадрат: Сторона = " << side << ", Площа = " << area << endl;
    }

}; // Кінець оголошення класу Square

// Головна функція програми
int main()
{
    // Встановлення української локалі для коректного виведення в консоль
    setlocale(LC_ALL, "uk_UA.UTF-8");

    cout << "--- Створення об'єктів Square ---" << endl;
    // **Завдання 1: Виправіть помилки і створіть кілька нових об'єктів.**

    // Створення першого квадрата s1 зі стороною 4
    Square s1(4); // Помилка Square s(4); print("square); виправлена
    s1.print();    // Виклик методу print для об'єкта s1

    // Створення другого квадрата s2 зі стороною 10.5
    Square s2(10.5);
    s2.print();

    // Створення третього квадрата s3 зі стороною 0
    Square s3(0);
    s3.print();

    // Створення четвертого квадрата s4 з недопустимою стороною -5
    // Конструктор має обробити це значення
    Square s4(-5);
    s4.print();


    cout << "\n--- Використання методів set, get та перевірки змін ---" << endl;

    // Робота з s1
    cout << "\nОб'єкт s1:" << endl;
    cout << "Площа s1 (через get_area): " << s1.get_area() << endl;
    cout << "Чи змінювалася сторона s1? " << (s1.was_side_changed() ? "Так" : "Ні") << endl;

    // Зміна сторони s1 на валідне значення (2.0)
    // **Виправлення помилки:** s.side $=2.0$; замінено на виклик сеттера
    s1.set_side(2.0);
    s1.print();
    cout << "Чи змінювалася сторона s1? " << (s1.was_side_changed() ? "Так" : "Ні") << endl;
     cout << "Площа s1 після зміни (через get_area): " << s1.get_area() << endl;

    // Спроба змінити сторону s1 на неваліднe значення (-33.0)
    // **Виправлення помилки:** s.side $=-33.0$; замінено на виклик сеттера
    s1.set_side(-33.0);
    s1.print(); // Сторона та площа не мають змінитися
    cout << "Чи змінювалася сторона s1 після спроби встановити -33.0? " << (s1.was_side_changed() ? "Так" : "Ні") << endl; // Має бути "Так", бо була успішна зміна на 2.0 раніше

     // Спроба встановити ту саму сторону (2.0)
    s1.set_side(2.0);
    s1.print();


    // Робота з s2
    cout << "\nОб'єкт s2:" << endl;
     cout << "Чи змінювалася сторона s2? " << (s2.was_side_changed() ? "Так" : "Ні") << endl;
     s2.set_side(5);
     s2.print();
     cout << "Чи змінювалася сторона s2? " << (s2.was_side_changed() ? "Так" : "Ні") << endl;

    // Повертаємо 0, що свідчить про успішне завершення програми
    return 0;
} // Кінець функції main
